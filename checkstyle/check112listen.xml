<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
          "-//Puppy Crawl//DTD Check Configuration 1.3//EN"
          "http://www.puppycrawl.com/dtds/configuration_1_3.dtd">

<!--

  Checkstyle configuration for 500.112: Gateway Computing
  at Johns Hopkins University, sections taught in Java.
  Similar to the configuration for 601.226 Data Structures.
  Simplified for beginners, and compatible with jGrasp CSD.
  
-->

<module name="Checker">

  <module name="GatewayCheckstyleListener">
  </module>

    <!-- Checks that property files contain the same keys.         -->
    <!-- See http://checkstyle.sf.net/config_misc.html#Translation -->
    <module name="Translation"/>
    
<!-- Checks for Size Violations.                    -->
<!-- maximum 2000 lines by default                  -->
<!-- See http://checkstyle.sf.net/config_sizes.html -->
    <module name="FileLength"/>
    <module name="LineLength"/> <!-- default 80 chars -->
    
    <!-- Checks for whitespace, not tabs                     -->
    <!-- See http://checkstyle.sf.net/config_whitespace.html -->
    <module name="FileTabCharacter"/>

    <module name="TreeWalker">

        <!-- Checks for Javadoc comments.                     -->
        <!-- See http://checkstyle.sf.net/config_javadoc.html -->
        <module name="InvalidJavadocPosition"/>
        <module name="JavadocMethod">
          <property name="scope" value="protected"/>
        </module>
        <module name="JavadocType">
          <property name="scope" value="protected"/>
        </module>
        <module name="JavadocVariable">
          <property name="scope" value="protected"/>
        </module>
        <module name="JavadocStyle">
          <property name="scope" value="protected"/>
          <!-- empty tags are not okay -->
          <property name="checkEmptyJavadoc" value="true"/>
        </module>
<module name="MissingJavadocMethod">
  <property name="scope" value="protected"/>
  <property name="ignoreMethodNamesRegex" value="main"/>
</module>
<module name="MissingJavadocType">
  <property name="scope" value="protected"/>
</module>


        <!-- Checks for Naming Conventions.                  -->
        <!-- See http://checkstyle.sf.net/config_naming.html -->
        <module name="ConstantName"/>
        <module name="LocalFinalVariableName">
                <property name="format" value="^[A-Z][A-Z0-9]*$"/>
              </module>
        <module name="LocalVariableName"/>
        <module name="MemberName"/>
        <module name="MethodName"/>
        <module name="PackageName">
          <property name="format"
                    value="^[a-z]+([a-zA-Z_][a-zA-Z0-9_]*)*$"/>
        </module>
        <module name="ParameterName"/>
        <module name="StaticVariableName"/>
        <module name="TypeName"/>
        <module name="CatchParameterName"/> <!-- not in 5.9 -->
        <module name="ClassTypeParameterName"/>
        <module name="InterfaceTypeParameterName"/>
        <module name="MethodTypeParameterName"/>

        <!-- enforce sane imports -->
        <!-- See http://checkstyle.sf.net/config_import.html -->
        <module name="AvoidStarImport"/>
        <module name="IllegalImport"/> <!-- default sun.* packages -->
        <module name="RedundantImport"/>
        <module name="UnusedImports"/>

        <!-- size violations -->
        <!-- See http://checkstyle.sf.net/config_sizes.html -->        
        <module name="AnonInnerLength"/> <!-- default 20 lines -->
        <module name="MethodLength"/> <!-- default 150 lines -->
        <module name="ParameterNumber"/> <!-- default 7 parameters -->
        <module name="OuterTypeNumber"/> <!-- default 1 per file -->

        <!-- whitespace checks -->
        <module name="EmptyForInitializerPad"/>
        <module name="EmptyForIteratorPad"/>
        <module name="EmptyLineSeparator">
            <property name="allowNoEmptyLineBetweenFields" value="true" />
        </module>
        <module name="GenericWhitespace"/>
        <module name="MethodParamPad"/>
        <module name="NoLineWrap"/>
        <module name="NoWhitespaceAfter">
                <property name="tokens" value="DOT, ARRAY_INIT, INC,
        DEC, UNARY_MINUS, UNARY_PLUS, DOT, ARRAY_DECLARATOR"/>
                </module>
<!-- [js] modified to allow whitespace after NOT operators -->
        <module name="NoWhitespaceBefore"/>
<!-- [js] modified to remove OperatorWrap rule -->
        <module name="ParenPad"/>
        <module name="TypecastParenPad"/>
        <module name="WhitespaceAfter"/>
        <module name="WhitespaceAround">
           <!-- empty methods look better this way -->
           <property name="allowEmptyMethods" value="true" />
           <property name="allowEmptyConstructors" value="true" />
        </module>

        <!-- sane use of modifiers (sane is a relative term) -->
        <!-- See http://checkstyle.sf.net/config_modifiers.html -->
        <module name="ModifierOrder"/>
        <module name="RedundantModifier"/>

        <!-- block checks -->
        <!-- See http://checkstyle.sf.net/config_blocks.html -->
        <module name="AvoidNestedBlocks"/>
        <module name="EmptyBlock"/>
        <module name="EmptyCatchBlock"/> <!-- not in 5.9 -->
        <module name="LeftCurly"/>
        <module name="NeedBraces"/>
        <module name="RightCurly">
          <property name = "option" value = "alone" />
            <property  name="tokens" value="LITERAL_ELSE, METHOD_DEF"/>
          </module>
       <!-- [js] set property for jGRASP compatibility with else    -->
          
        <!-- coding style -->
        <module name="ArrayTrailingComma"/>
        <!--
            I want them to use ?: every now and then; sadly
            there's no option to just disallow complicated ones.
        -->
        <!--<module name="AvoidInlineConditionals"/>-->
        <module name="CovariantEquals"/> <!-- avoid accidental overloading -->
        <module name="DeclarationOrder"/> <!-- standardize classes -->
        <module name="DefaultComesLast"/> <!-- standardize switch -->
        <module name="EmptyStatement"/>
        <module name="EqualsAvoidNull"/>
<!--        <module name="EqualsHashCode"/> -->
<!-- [js] removed to not confuse beginners -->
        <module name="ExplicitInitialization"/> <!-- avoid initializing twice -->
        <module name="HiddenField"> <!-- softened for constructors, discourage other places -->
           <property name="ignoreConstructorParameter" value="true"/>
        </module>
        <module name="IllegalCatch"/> <!-- avoid overly generic catch -->
        <module name="IllegalThrows"/> <!-- avoid overly generic throw -->
        <module name="InnerAssignment"/> <!-- avoid assignments as expressions -->
        <!--<module name="MagicNumber"/>--> <!-- more trouble than it's worth, we can still grade them down but we don't have to force ridiculous constant declarations -->
        <module name="MissingSwitchDefault"/> <!-- standardize switch -->
        <module name="ModifiedControlVariable"/> <!-- TODO: should for-each be different? -->
        <module name="MultipleVariableDeclarations"/>
        <module name="NestedTryDepth"/> <!-- no try inside a try -->
        <module name="NoClone"/>
        <module name="NoFinalizer"/>
        <module name="OneStatementPerLine"/>
        <module name="OverloadMethodsDeclarationOrder"/>
        <module name="RequireThis"/> <!-- emphasize non-local stuff -->
        <module name="SimplifyBooleanExpression"/>
        <module name="SimplifyBooleanReturn"/>
        <module name="StringLiteralEquality"/> <!-- reminder to use equals() -->

        <!-- annotation checks -->
        <module name="AnnotationLocation"/> <!-- standardize classes --> <!-- not in 5.9 -->

        <!-- design checks -->
        <!--<module name="DesignForExtension"/>--> <!-- too hard to explain -->
        <module name="FinalClass"/>
<!--        <module name="HideUtilityClassConstructor"/> -->
<!-- [js] removed for beginners -->
        <module name="InterfaceIsType"/>
        <module name="MutableException"/>
        <module name="OneTopLevelClass"/>
        <module name="ThrowsCount">
            <property name="ignorePrivateMethods" value="false"/> <!-- not in 5.9 -->
        </module>
        <!--<module name="VisibilityModifier"/>--> <!-- too restrictive for nested classes -->

        <!-- code complexity checks -->
	<!--<module name="ClassDataAbstractionCoupling"/>--> <!-- too restrictive for polymorphic test drivers that make instances of a lot of classes -->
        <module name="ClassFanOutComplexity"/> <!-- TODO: on probation -->
        <module name="CyclomaticComplexity">
          <property name="max" value="15"/>
                </module> 
<!-- [phf] added to keep methods managable, [js] increased from 10 to 15 -->
        <module name="NPathComplexity"/> <!-- TODO: on probation -->

        <!-- miscellaneous checks -->

      <module name="Indentation">
          <property name="basicOffset" value="3"/>
          <property name="caseIndent" value="3"/>
          <property name="throwsIndent" value="3"/>
          <property name="arrayInitIndent" value="3"/>
          <property name="lineWrappingIndentation" value="3"/>
        </module> 
<!-- [js] changed values for beginners to be consistent with jGRASP CSD -->

<!--    <module name="CommentsIndentation"/> -->
<!-- [js] can be annoying -->

        <!--<module name="FinalParameters"/>--> <!-- ruins pass-by-value -->
      
        <module name="OuterTypeFilename"/>
        <module name="TodoComment"/>
        <module name="UpperEll"/>
    </module>

</module>
